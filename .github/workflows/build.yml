name: Build Go Application

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            GOOS: linux
            GOARCH: amd64
            artifact_name: jt-linux-amd64
          - os: ubuntu-latest
            GOOS: linux
            GOARCH: arm64
            artifact_name: jt-linux-arm64
          - os: windows-latest
            GOOS: windows
            GOARCH: amd64
            artifact_name: jt-windows-amd64.exe
          - os: macos-latest
            GOOS: darwin
            GOARCH: amd64
            artifact_name: jt-darwin-amd64
          - os: macos-latest
            GOOS: darwin
            GOARCH: arm64
            artifact_name: jt-darwin-arm64

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Display Go version
        run: go version

      - name: Install dependencies
        run: |
          go get github.com/joho/godotenv
          go mod tidy

      - name: Build
        env:
          GOOS: ${{ matrix.GOOS }}
          GOARCH: ${{ matrix.GOARCH }}
          CGO_ENABLED: 0
        run: |
          go build -v -ldflags="-s -w" -o ${{ matrix.artifact_name }} ./cmd/jt

      - name: Set executable permissions (Unix)
        if: matrix.GOOS != 'windows'
        run: chmod +x ${{ matrix.artifact_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: List files
        run: ls -R

      - name: Prepare artifacts for release
        run: |
          mkdir release
          mv **/jt-* release/
          chmod +x release/jt-linux-*
          chmod +x release/jt-darwin-*

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/jt-linux-amd64
            release/jt-linux-arm64
            release/jt-windows-amd64.exe
            release/jt-darwin-amd64
            release/jt-darwin-arm64
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
